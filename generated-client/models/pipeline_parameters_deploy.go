// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PipelineParametersDeploy PipelineParametersDeploy describes environment to deploy
//
// swagger:model PipelineParametersDeploy
type PipelineParametersDeploy struct {

	// CommitID the commit ID of the branch
	// OPTIONAL for information only
	// Example: 4faca8595c5283a9d0f17a623b9255a0d9866a2e
	CommitID string `json:"commitID,omitempty"`

	// Image tags names for components
	// Example: component1=tag1,component2=tag2
	ImageTagNames map[string]string `json:"imageTagNames,omitempty"`

	// Name of environment to deploy
	// REQUIRED for "deploy" pipeline
	// Example: prod
	ToEnvironment string `json:"toEnvironment,omitempty"`

	// TriggeredBy of the job - if empty will use user token upn (user principle name)
	// Example: a_user@equinor.com
	TriggeredBy string `json:"triggeredBy,omitempty"`
}

// Validate validates this pipeline parameters deploy
func (m *PipelineParametersDeploy) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this pipeline parameters deploy based on context it is used
func (m *PipelineParametersDeploy) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PipelineParametersDeploy) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PipelineParametersDeploy) UnmarshalBinary(b []byte) error {
	var res PipelineParametersDeploy
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
