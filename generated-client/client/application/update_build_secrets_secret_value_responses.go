// Code generated by go-swagger; DO NOT EDIT.

package application

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateBuildSecretsSecretValueReader is a Reader for the UpdateBuildSecretsSecretValue structure.
type UpdateBuildSecretsSecretValueReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateBuildSecretsSecretValueReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateBuildSecretsSecretValueOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateBuildSecretsSecretValueBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateBuildSecretsSecretValueUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateBuildSecretsSecretValueForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateBuildSecretsSecretValueNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewUpdateBuildSecretsSecretValueConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /applications/{appName}/buildsecrets/{secretName}] updateBuildSecretsSecretValue", response, response.Code())
	}
}

// NewUpdateBuildSecretsSecretValueOK creates a UpdateBuildSecretsSecretValueOK with default headers values
func NewUpdateBuildSecretsSecretValueOK() *UpdateBuildSecretsSecretValueOK {
	return &UpdateBuildSecretsSecretValueOK{}
}

/*
UpdateBuildSecretsSecretValueOK describes a response with status code 200, with default header values.

success
*/
type UpdateBuildSecretsSecretValueOK struct {
}

// IsSuccess returns true when this update build secrets secret value o k response has a 2xx status code
func (o *UpdateBuildSecretsSecretValueOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update build secrets secret value o k response has a 3xx status code
func (o *UpdateBuildSecretsSecretValueOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update build secrets secret value o k response has a 4xx status code
func (o *UpdateBuildSecretsSecretValueOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update build secrets secret value o k response has a 5xx status code
func (o *UpdateBuildSecretsSecretValueOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update build secrets secret value o k response a status code equal to that given
func (o *UpdateBuildSecretsSecretValueOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update build secrets secret value o k response
func (o *UpdateBuildSecretsSecretValueOK) Code() int {
	return 200
}

func (o *UpdateBuildSecretsSecretValueOK) Error() string {
	return fmt.Sprintf("[PUT /applications/{appName}/buildsecrets/{secretName}][%d] updateBuildSecretsSecretValueOK ", 200)
}

func (o *UpdateBuildSecretsSecretValueOK) String() string {
	return fmt.Sprintf("[PUT /applications/{appName}/buildsecrets/{secretName}][%d] updateBuildSecretsSecretValueOK ", 200)
}

func (o *UpdateBuildSecretsSecretValueOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateBuildSecretsSecretValueBadRequest creates a UpdateBuildSecretsSecretValueBadRequest with default headers values
func NewUpdateBuildSecretsSecretValueBadRequest() *UpdateBuildSecretsSecretValueBadRequest {
	return &UpdateBuildSecretsSecretValueBadRequest{}
}

/*
UpdateBuildSecretsSecretValueBadRequest describes a response with status code 400, with default header values.

Invalid application
*/
type UpdateBuildSecretsSecretValueBadRequest struct {
}

// IsSuccess returns true when this update build secrets secret value bad request response has a 2xx status code
func (o *UpdateBuildSecretsSecretValueBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update build secrets secret value bad request response has a 3xx status code
func (o *UpdateBuildSecretsSecretValueBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update build secrets secret value bad request response has a 4xx status code
func (o *UpdateBuildSecretsSecretValueBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update build secrets secret value bad request response has a 5xx status code
func (o *UpdateBuildSecretsSecretValueBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update build secrets secret value bad request response a status code equal to that given
func (o *UpdateBuildSecretsSecretValueBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update build secrets secret value bad request response
func (o *UpdateBuildSecretsSecretValueBadRequest) Code() int {
	return 400
}

func (o *UpdateBuildSecretsSecretValueBadRequest) Error() string {
	return fmt.Sprintf("[PUT /applications/{appName}/buildsecrets/{secretName}][%d] updateBuildSecretsSecretValueBadRequest ", 400)
}

func (o *UpdateBuildSecretsSecretValueBadRequest) String() string {
	return fmt.Sprintf("[PUT /applications/{appName}/buildsecrets/{secretName}][%d] updateBuildSecretsSecretValueBadRequest ", 400)
}

func (o *UpdateBuildSecretsSecretValueBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateBuildSecretsSecretValueUnauthorized creates a UpdateBuildSecretsSecretValueUnauthorized with default headers values
func NewUpdateBuildSecretsSecretValueUnauthorized() *UpdateBuildSecretsSecretValueUnauthorized {
	return &UpdateBuildSecretsSecretValueUnauthorized{}
}

/*
UpdateBuildSecretsSecretValueUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateBuildSecretsSecretValueUnauthorized struct {
}

// IsSuccess returns true when this update build secrets secret value unauthorized response has a 2xx status code
func (o *UpdateBuildSecretsSecretValueUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update build secrets secret value unauthorized response has a 3xx status code
func (o *UpdateBuildSecretsSecretValueUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update build secrets secret value unauthorized response has a 4xx status code
func (o *UpdateBuildSecretsSecretValueUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update build secrets secret value unauthorized response has a 5xx status code
func (o *UpdateBuildSecretsSecretValueUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update build secrets secret value unauthorized response a status code equal to that given
func (o *UpdateBuildSecretsSecretValueUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update build secrets secret value unauthorized response
func (o *UpdateBuildSecretsSecretValueUnauthorized) Code() int {
	return 401
}

func (o *UpdateBuildSecretsSecretValueUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /applications/{appName}/buildsecrets/{secretName}][%d] updateBuildSecretsSecretValueUnauthorized ", 401)
}

func (o *UpdateBuildSecretsSecretValueUnauthorized) String() string {
	return fmt.Sprintf("[PUT /applications/{appName}/buildsecrets/{secretName}][%d] updateBuildSecretsSecretValueUnauthorized ", 401)
}

func (o *UpdateBuildSecretsSecretValueUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateBuildSecretsSecretValueForbidden creates a UpdateBuildSecretsSecretValueForbidden with default headers values
func NewUpdateBuildSecretsSecretValueForbidden() *UpdateBuildSecretsSecretValueForbidden {
	return &UpdateBuildSecretsSecretValueForbidden{}
}

/*
UpdateBuildSecretsSecretValueForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateBuildSecretsSecretValueForbidden struct {
}

// IsSuccess returns true when this update build secrets secret value forbidden response has a 2xx status code
func (o *UpdateBuildSecretsSecretValueForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update build secrets secret value forbidden response has a 3xx status code
func (o *UpdateBuildSecretsSecretValueForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update build secrets secret value forbidden response has a 4xx status code
func (o *UpdateBuildSecretsSecretValueForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update build secrets secret value forbidden response has a 5xx status code
func (o *UpdateBuildSecretsSecretValueForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update build secrets secret value forbidden response a status code equal to that given
func (o *UpdateBuildSecretsSecretValueForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update build secrets secret value forbidden response
func (o *UpdateBuildSecretsSecretValueForbidden) Code() int {
	return 403
}

func (o *UpdateBuildSecretsSecretValueForbidden) Error() string {
	return fmt.Sprintf("[PUT /applications/{appName}/buildsecrets/{secretName}][%d] updateBuildSecretsSecretValueForbidden ", 403)
}

func (o *UpdateBuildSecretsSecretValueForbidden) String() string {
	return fmt.Sprintf("[PUT /applications/{appName}/buildsecrets/{secretName}][%d] updateBuildSecretsSecretValueForbidden ", 403)
}

func (o *UpdateBuildSecretsSecretValueForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateBuildSecretsSecretValueNotFound creates a UpdateBuildSecretsSecretValueNotFound with default headers values
func NewUpdateBuildSecretsSecretValueNotFound() *UpdateBuildSecretsSecretValueNotFound {
	return &UpdateBuildSecretsSecretValueNotFound{}
}

/*
UpdateBuildSecretsSecretValueNotFound describes a response with status code 404, with default header values.

Not found
*/
type UpdateBuildSecretsSecretValueNotFound struct {
}

// IsSuccess returns true when this update build secrets secret value not found response has a 2xx status code
func (o *UpdateBuildSecretsSecretValueNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update build secrets secret value not found response has a 3xx status code
func (o *UpdateBuildSecretsSecretValueNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update build secrets secret value not found response has a 4xx status code
func (o *UpdateBuildSecretsSecretValueNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update build secrets secret value not found response has a 5xx status code
func (o *UpdateBuildSecretsSecretValueNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update build secrets secret value not found response a status code equal to that given
func (o *UpdateBuildSecretsSecretValueNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update build secrets secret value not found response
func (o *UpdateBuildSecretsSecretValueNotFound) Code() int {
	return 404
}

func (o *UpdateBuildSecretsSecretValueNotFound) Error() string {
	return fmt.Sprintf("[PUT /applications/{appName}/buildsecrets/{secretName}][%d] updateBuildSecretsSecretValueNotFound ", 404)
}

func (o *UpdateBuildSecretsSecretValueNotFound) String() string {
	return fmt.Sprintf("[PUT /applications/{appName}/buildsecrets/{secretName}][%d] updateBuildSecretsSecretValueNotFound ", 404)
}

func (o *UpdateBuildSecretsSecretValueNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateBuildSecretsSecretValueConflict creates a UpdateBuildSecretsSecretValueConflict with default headers values
func NewUpdateBuildSecretsSecretValueConflict() *UpdateBuildSecretsSecretValueConflict {
	return &UpdateBuildSecretsSecretValueConflict{}
}

/*
UpdateBuildSecretsSecretValueConflict describes a response with status code 409, with default header values.

Conflict
*/
type UpdateBuildSecretsSecretValueConflict struct {
}

// IsSuccess returns true when this update build secrets secret value conflict response has a 2xx status code
func (o *UpdateBuildSecretsSecretValueConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update build secrets secret value conflict response has a 3xx status code
func (o *UpdateBuildSecretsSecretValueConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update build secrets secret value conflict response has a 4xx status code
func (o *UpdateBuildSecretsSecretValueConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this update build secrets secret value conflict response has a 5xx status code
func (o *UpdateBuildSecretsSecretValueConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this update build secrets secret value conflict response a status code equal to that given
func (o *UpdateBuildSecretsSecretValueConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the update build secrets secret value conflict response
func (o *UpdateBuildSecretsSecretValueConflict) Code() int {
	return 409
}

func (o *UpdateBuildSecretsSecretValueConflict) Error() string {
	return fmt.Sprintf("[PUT /applications/{appName}/buildsecrets/{secretName}][%d] updateBuildSecretsSecretValueConflict ", 409)
}

func (o *UpdateBuildSecretsSecretValueConflict) String() string {
	return fmt.Sprintf("[PUT /applications/{appName}/buildsecrets/{secretName}][%d] updateBuildSecretsSecretValueConflict ", 409)
}

func (o *UpdateBuildSecretsSecretValueConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
