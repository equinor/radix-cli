// Code generated by go-swagger; DO NOT EDIT.

package application

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// StartApplicationReader is a Reader for the StartApplication structure.
type StartApplicationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StartApplicationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStartApplicationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewStartApplicationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewStartApplicationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /applications/{appName}/start] startApplication", response, response.Code())
	}
}

// NewStartApplicationOK creates a StartApplicationOK with default headers values
func NewStartApplicationOK() *StartApplicationOK {
	return &StartApplicationOK{}
}

/*
StartApplicationOK describes a response with status code 200, with default header values.

Application started ok
*/
type StartApplicationOK struct {
}

// IsSuccess returns true when this start application o k response has a 2xx status code
func (o *StartApplicationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this start application o k response has a 3xx status code
func (o *StartApplicationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this start application o k response has a 4xx status code
func (o *StartApplicationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this start application o k response has a 5xx status code
func (o *StartApplicationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this start application o k response a status code equal to that given
func (o *StartApplicationOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the start application o k response
func (o *StartApplicationOK) Code() int {
	return 200
}

func (o *StartApplicationOK) Error() string {
	return fmt.Sprintf("[POST /applications/{appName}/start][%d] startApplicationOK ", 200)
}

func (o *StartApplicationOK) String() string {
	return fmt.Sprintf("[POST /applications/{appName}/start][%d] startApplicationOK ", 200)
}

func (o *StartApplicationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStartApplicationUnauthorized creates a StartApplicationUnauthorized with default headers values
func NewStartApplicationUnauthorized() *StartApplicationUnauthorized {
	return &StartApplicationUnauthorized{}
}

/*
StartApplicationUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type StartApplicationUnauthorized struct {
}

// IsSuccess returns true when this start application unauthorized response has a 2xx status code
func (o *StartApplicationUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this start application unauthorized response has a 3xx status code
func (o *StartApplicationUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this start application unauthorized response has a 4xx status code
func (o *StartApplicationUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this start application unauthorized response has a 5xx status code
func (o *StartApplicationUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this start application unauthorized response a status code equal to that given
func (o *StartApplicationUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the start application unauthorized response
func (o *StartApplicationUnauthorized) Code() int {
	return 401
}

func (o *StartApplicationUnauthorized) Error() string {
	return fmt.Sprintf("[POST /applications/{appName}/start][%d] startApplicationUnauthorized ", 401)
}

func (o *StartApplicationUnauthorized) String() string {
	return fmt.Sprintf("[POST /applications/{appName}/start][%d] startApplicationUnauthorized ", 401)
}

func (o *StartApplicationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStartApplicationNotFound creates a StartApplicationNotFound with default headers values
func NewStartApplicationNotFound() *StartApplicationNotFound {
	return &StartApplicationNotFound{}
}

/*
StartApplicationNotFound describes a response with status code 404, with default header values.

Not found
*/
type StartApplicationNotFound struct {
}

// IsSuccess returns true when this start application not found response has a 2xx status code
func (o *StartApplicationNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this start application not found response has a 3xx status code
func (o *StartApplicationNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this start application not found response has a 4xx status code
func (o *StartApplicationNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this start application not found response has a 5xx status code
func (o *StartApplicationNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this start application not found response a status code equal to that given
func (o *StartApplicationNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the start application not found response
func (o *StartApplicationNotFound) Code() int {
	return 404
}

func (o *StartApplicationNotFound) Error() string {
	return fmt.Sprintf("[POST /applications/{appName}/start][%d] startApplicationNotFound ", 404)
}

func (o *StartApplicationNotFound) String() string {
	return fmt.Sprintf("[POST /applications/{appName}/start][%d] startApplicationNotFound ", 404)
}

func (o *StartApplicationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
