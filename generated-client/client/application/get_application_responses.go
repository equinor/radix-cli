// Code generated by go-swagger; DO NOT EDIT.

package application

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/equinor/radix-cli/generated-client/models"
)

// GetApplicationReader is a Reader for the GetApplication structure.
type GetApplicationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetApplicationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetApplicationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetApplicationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetApplicationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetApplicationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetApplicationConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetApplicationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /applications/{appName}] getApplication", response, response.Code())
	}
}

// NewGetApplicationOK creates a GetApplicationOK with default headers values
func NewGetApplicationOK() *GetApplicationOK {
	return &GetApplicationOK{}
}

/*
GetApplicationOK describes a response with status code 200, with default header values.

Successful get application
*/
type GetApplicationOK struct {
	Payload *models.Application
}

// IsSuccess returns true when this get application o k response has a 2xx status code
func (o *GetApplicationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get application o k response has a 3xx status code
func (o *GetApplicationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get application o k response has a 4xx status code
func (o *GetApplicationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get application o k response has a 5xx status code
func (o *GetApplicationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get application o k response a status code equal to that given
func (o *GetApplicationOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get application o k response
func (o *GetApplicationOK) Code() int {
	return 200
}

func (o *GetApplicationOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /applications/{appName}][%d] getApplicationOK %s", 200, payload)
}

func (o *GetApplicationOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /applications/{appName}][%d] getApplicationOK %s", 200, payload)
}

func (o *GetApplicationOK) GetPayload() *models.Application {
	return o.Payload
}

func (o *GetApplicationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Application)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetApplicationUnauthorized creates a GetApplicationUnauthorized with default headers values
func NewGetApplicationUnauthorized() *GetApplicationUnauthorized {
	return &GetApplicationUnauthorized{}
}

/*
GetApplicationUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetApplicationUnauthorized struct {
}

// IsSuccess returns true when this get application unauthorized response has a 2xx status code
func (o *GetApplicationUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get application unauthorized response has a 3xx status code
func (o *GetApplicationUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get application unauthorized response has a 4xx status code
func (o *GetApplicationUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get application unauthorized response has a 5xx status code
func (o *GetApplicationUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get application unauthorized response a status code equal to that given
func (o *GetApplicationUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get application unauthorized response
func (o *GetApplicationUnauthorized) Code() int {
	return 401
}

func (o *GetApplicationUnauthorized) Error() string {
	return fmt.Sprintf("[GET /applications/{appName}][%d] getApplicationUnauthorized", 401)
}

func (o *GetApplicationUnauthorized) String() string {
	return fmt.Sprintf("[GET /applications/{appName}][%d] getApplicationUnauthorized", 401)
}

func (o *GetApplicationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetApplicationForbidden creates a GetApplicationForbidden with default headers values
func NewGetApplicationForbidden() *GetApplicationForbidden {
	return &GetApplicationForbidden{}
}

/*
GetApplicationForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetApplicationForbidden struct {
}

// IsSuccess returns true when this get application forbidden response has a 2xx status code
func (o *GetApplicationForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get application forbidden response has a 3xx status code
func (o *GetApplicationForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get application forbidden response has a 4xx status code
func (o *GetApplicationForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get application forbidden response has a 5xx status code
func (o *GetApplicationForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get application forbidden response a status code equal to that given
func (o *GetApplicationForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get application forbidden response
func (o *GetApplicationForbidden) Code() int {
	return 403
}

func (o *GetApplicationForbidden) Error() string {
	return fmt.Sprintf("[GET /applications/{appName}][%d] getApplicationForbidden", 403)
}

func (o *GetApplicationForbidden) String() string {
	return fmt.Sprintf("[GET /applications/{appName}][%d] getApplicationForbidden", 403)
}

func (o *GetApplicationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetApplicationNotFound creates a GetApplicationNotFound with default headers values
func NewGetApplicationNotFound() *GetApplicationNotFound {
	return &GetApplicationNotFound{}
}

/*
GetApplicationNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetApplicationNotFound struct {
}

// IsSuccess returns true when this get application not found response has a 2xx status code
func (o *GetApplicationNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get application not found response has a 3xx status code
func (o *GetApplicationNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get application not found response has a 4xx status code
func (o *GetApplicationNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get application not found response has a 5xx status code
func (o *GetApplicationNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get application not found response a status code equal to that given
func (o *GetApplicationNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get application not found response
func (o *GetApplicationNotFound) Code() int {
	return 404
}

func (o *GetApplicationNotFound) Error() string {
	return fmt.Sprintf("[GET /applications/{appName}][%d] getApplicationNotFound", 404)
}

func (o *GetApplicationNotFound) String() string {
	return fmt.Sprintf("[GET /applications/{appName}][%d] getApplicationNotFound", 404)
}

func (o *GetApplicationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetApplicationConflict creates a GetApplicationConflict with default headers values
func NewGetApplicationConflict() *GetApplicationConflict {
	return &GetApplicationConflict{}
}

/*
GetApplicationConflict describes a response with status code 409, with default header values.

Conflict
*/
type GetApplicationConflict struct {
}

// IsSuccess returns true when this get application conflict response has a 2xx status code
func (o *GetApplicationConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get application conflict response has a 3xx status code
func (o *GetApplicationConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get application conflict response has a 4xx status code
func (o *GetApplicationConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this get application conflict response has a 5xx status code
func (o *GetApplicationConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this get application conflict response a status code equal to that given
func (o *GetApplicationConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the get application conflict response
func (o *GetApplicationConflict) Code() int {
	return 409
}

func (o *GetApplicationConflict) Error() string {
	return fmt.Sprintf("[GET /applications/{appName}][%d] getApplicationConflict", 409)
}

func (o *GetApplicationConflict) String() string {
	return fmt.Sprintf("[GET /applications/{appName}][%d] getApplicationConflict", 409)
}

func (o *GetApplicationConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetApplicationInternalServerError creates a GetApplicationInternalServerError with default headers values
func NewGetApplicationInternalServerError() *GetApplicationInternalServerError {
	return &GetApplicationInternalServerError{}
}

/*
GetApplicationInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetApplicationInternalServerError struct {
}

// IsSuccess returns true when this get application internal server error response has a 2xx status code
func (o *GetApplicationInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get application internal server error response has a 3xx status code
func (o *GetApplicationInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get application internal server error response has a 4xx status code
func (o *GetApplicationInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get application internal server error response has a 5xx status code
func (o *GetApplicationInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get application internal server error response a status code equal to that given
func (o *GetApplicationInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get application internal server error response
func (o *GetApplicationInternalServerError) Code() int {
	return 500
}

func (o *GetApplicationInternalServerError) Error() string {
	return fmt.Sprintf("[GET /applications/{appName}][%d] getApplicationInternalServerError", 500)
}

func (o *GetApplicationInternalServerError) String() string {
	return fmt.Sprintf("[GET /applications/{appName}][%d] getApplicationInternalServerError", 500)
}

func (o *GetApplicationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
