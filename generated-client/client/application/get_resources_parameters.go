// Code generated by go-swagger; DO NOT EDIT.

package application

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetResourcesParams creates a new GetResourcesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetResourcesParams() *GetResourcesParams {
	return &GetResourcesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetResourcesParamsWithTimeout creates a new GetResourcesParams object
// with the ability to set a timeout on a request.
func NewGetResourcesParamsWithTimeout(timeout time.Duration) *GetResourcesParams {
	return &GetResourcesParams{
		timeout: timeout,
	}
}

// NewGetResourcesParamsWithContext creates a new GetResourcesParams object
// with the ability to set a context for a request.
func NewGetResourcesParamsWithContext(ctx context.Context) *GetResourcesParams {
	return &GetResourcesParams{
		Context: ctx,
	}
}

// NewGetResourcesParamsWithHTTPClient creates a new GetResourcesParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetResourcesParamsWithHTTPClient(client *http.Client) *GetResourcesParams {
	return &GetResourcesParams{
		HTTPClient: client,
	}
}

/*
GetResourcesParams contains all the parameters to send to the API endpoint

	for the get resources operation.

	Typically these are written to a http.Request.
*/
type GetResourcesParams struct {

	/* ImpersonateGroup.

	   Works only with custom setup of cluster. Allow impersonation of a comma-seperated list of test groups (Required if Impersonate-User is set)
	*/
	ImpersonateGroup *string

	/* ImpersonateUser.

	   Works only with custom setup of cluster. Allow impersonation of test users (Required if Impersonate-Group is set)
	*/
	ImpersonateUser *string

	/* AppName.

	   Name of the application
	*/
	AppName string

	/* Component.

	   Name of the application component in an environment
	*/
	Component *string

	/* Duration.

	   Duration of the period, default is 30d (30 days). Example 10m, 1h, 2d, 3w, where m-minutes, h-hours, d-days, w-weeks
	*/
	Duration *string

	/* Environment.

	   Name of the application environment
	*/
	Environment *string

	/* Since.

	   End time-point of the period in the past, default is now. Example 10m, 1h, 2d, 3w, where m-minutes, h-hours, d-days, w-weeks
	*/
	Since *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get resources params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetResourcesParams) WithDefaults() *GetResourcesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get resources params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetResourcesParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get resources params
func (o *GetResourcesParams) WithTimeout(timeout time.Duration) *GetResourcesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get resources params
func (o *GetResourcesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get resources params
func (o *GetResourcesParams) WithContext(ctx context.Context) *GetResourcesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get resources params
func (o *GetResourcesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get resources params
func (o *GetResourcesParams) WithHTTPClient(client *http.Client) *GetResourcesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get resources params
func (o *GetResourcesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithImpersonateGroup adds the impersonateGroup to the get resources params
func (o *GetResourcesParams) WithImpersonateGroup(impersonateGroup *string) *GetResourcesParams {
	o.SetImpersonateGroup(impersonateGroup)
	return o
}

// SetImpersonateGroup adds the impersonateGroup to the get resources params
func (o *GetResourcesParams) SetImpersonateGroup(impersonateGroup *string) {
	o.ImpersonateGroup = impersonateGroup
}

// WithImpersonateUser adds the impersonateUser to the get resources params
func (o *GetResourcesParams) WithImpersonateUser(impersonateUser *string) *GetResourcesParams {
	o.SetImpersonateUser(impersonateUser)
	return o
}

// SetImpersonateUser adds the impersonateUser to the get resources params
func (o *GetResourcesParams) SetImpersonateUser(impersonateUser *string) {
	o.ImpersonateUser = impersonateUser
}

// WithAppName adds the appName to the get resources params
func (o *GetResourcesParams) WithAppName(appName string) *GetResourcesParams {
	o.SetAppName(appName)
	return o
}

// SetAppName adds the appName to the get resources params
func (o *GetResourcesParams) SetAppName(appName string) {
	o.AppName = appName
}

// WithComponent adds the component to the get resources params
func (o *GetResourcesParams) WithComponent(component *string) *GetResourcesParams {
	o.SetComponent(component)
	return o
}

// SetComponent adds the component to the get resources params
func (o *GetResourcesParams) SetComponent(component *string) {
	o.Component = component
}

// WithDuration adds the duration to the get resources params
func (o *GetResourcesParams) WithDuration(duration *string) *GetResourcesParams {
	o.SetDuration(duration)
	return o
}

// SetDuration adds the duration to the get resources params
func (o *GetResourcesParams) SetDuration(duration *string) {
	o.Duration = duration
}

// WithEnvironment adds the environment to the get resources params
func (o *GetResourcesParams) WithEnvironment(environment *string) *GetResourcesParams {
	o.SetEnvironment(environment)
	return o
}

// SetEnvironment adds the environment to the get resources params
func (o *GetResourcesParams) SetEnvironment(environment *string) {
	o.Environment = environment
}

// WithSince adds the since to the get resources params
func (o *GetResourcesParams) WithSince(since *string) *GetResourcesParams {
	o.SetSince(since)
	return o
}

// SetSince adds the since to the get resources params
func (o *GetResourcesParams) SetSince(since *string) {
	o.Since = since
}

// WriteToRequest writes these params to a swagger request
func (o *GetResourcesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ImpersonateGroup != nil {

		// header param Impersonate-Group
		if err := r.SetHeaderParam("Impersonate-Group", *o.ImpersonateGroup); err != nil {
			return err
		}
	}

	if o.ImpersonateUser != nil {

		// header param Impersonate-User
		if err := r.SetHeaderParam("Impersonate-User", *o.ImpersonateUser); err != nil {
			return err
		}
	}

	// path param appName
	if err := r.SetPathParam("appName", o.AppName); err != nil {
		return err
	}

	if o.Component != nil {

		// query param component
		var qrComponent string

		if o.Component != nil {
			qrComponent = *o.Component
		}
		qComponent := qrComponent
		if qComponent != "" {

			if err := r.SetQueryParam("component", qComponent); err != nil {
				return err
			}
		}
	}

	if o.Duration != nil {

		// query param duration
		var qrDuration string

		if o.Duration != nil {
			qrDuration = *o.Duration
		}
		qDuration := qrDuration
		if qDuration != "" {

			if err := r.SetQueryParam("duration", qDuration); err != nil {
				return err
			}
		}
	}

	if o.Environment != nil {

		// query param environment
		var qrEnvironment string

		if o.Environment != nil {
			qrEnvironment = *o.Environment
		}
		qEnvironment := qrEnvironment
		if qEnvironment != "" {

			if err := r.SetQueryParam("environment", qEnvironment); err != nil {
				return err
			}
		}
	}

	if o.Since != nil {

		// query param since
		var qrSince string

		if o.Since != nil {
			qrSince = *o.Since
		}
		qSince := qrSince
		if qSince != "" {

			if err := r.SetQueryParam("since", qSince); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
