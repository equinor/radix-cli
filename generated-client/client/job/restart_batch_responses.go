// Code generated by go-swagger; DO NOT EDIT.

package job

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// RestartBatchReader is a Reader for the RestartBatch structure.
type RestartBatchReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RestartBatchReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewRestartBatchNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRestartBatchBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewRestartBatchUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRestartBatchForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRestartBatchNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /applications/{appName}/environments/{envName}/jobcomponents/{jobComponentName}/batches/{batchName}/restart] restartBatch", response, response.Code())
	}
}

// NewRestartBatchNoContent creates a RestartBatchNoContent with default headers values
func NewRestartBatchNoContent() *RestartBatchNoContent {
	return &RestartBatchNoContent{}
}

/*
RestartBatchNoContent describes a response with status code 204, with default header values.

Success
*/
type RestartBatchNoContent struct {
}

// IsSuccess returns true when this restart batch no content response has a 2xx status code
func (o *RestartBatchNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this restart batch no content response has a 3xx status code
func (o *RestartBatchNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restart batch no content response has a 4xx status code
func (o *RestartBatchNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this restart batch no content response has a 5xx status code
func (o *RestartBatchNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this restart batch no content response a status code equal to that given
func (o *RestartBatchNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the restart batch no content response
func (o *RestartBatchNoContent) Code() int {
	return 204
}

func (o *RestartBatchNoContent) Error() string {
	return fmt.Sprintf("[POST /applications/{appName}/environments/{envName}/jobcomponents/{jobComponentName}/batches/{batchName}/restart][%d] restartBatchNoContent ", 204)
}

func (o *RestartBatchNoContent) String() string {
	return fmt.Sprintf("[POST /applications/{appName}/environments/{envName}/jobcomponents/{jobComponentName}/batches/{batchName}/restart][%d] restartBatchNoContent ", 204)
}

func (o *RestartBatchNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRestartBatchBadRequest creates a RestartBatchBadRequest with default headers values
func NewRestartBatchBadRequest() *RestartBatchBadRequest {
	return &RestartBatchBadRequest{}
}

/*
RestartBatchBadRequest describes a response with status code 400, with default header values.

Invalid batch
*/
type RestartBatchBadRequest struct {
}

// IsSuccess returns true when this restart batch bad request response has a 2xx status code
func (o *RestartBatchBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restart batch bad request response has a 3xx status code
func (o *RestartBatchBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restart batch bad request response has a 4xx status code
func (o *RestartBatchBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this restart batch bad request response has a 5xx status code
func (o *RestartBatchBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this restart batch bad request response a status code equal to that given
func (o *RestartBatchBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the restart batch bad request response
func (o *RestartBatchBadRequest) Code() int {
	return 400
}

func (o *RestartBatchBadRequest) Error() string {
	return fmt.Sprintf("[POST /applications/{appName}/environments/{envName}/jobcomponents/{jobComponentName}/batches/{batchName}/restart][%d] restartBatchBadRequest ", 400)
}

func (o *RestartBatchBadRequest) String() string {
	return fmt.Sprintf("[POST /applications/{appName}/environments/{envName}/jobcomponents/{jobComponentName}/batches/{batchName}/restart][%d] restartBatchBadRequest ", 400)
}

func (o *RestartBatchBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRestartBatchUnauthorized creates a RestartBatchUnauthorized with default headers values
func NewRestartBatchUnauthorized() *RestartBatchUnauthorized {
	return &RestartBatchUnauthorized{}
}

/*
RestartBatchUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type RestartBatchUnauthorized struct {
}

// IsSuccess returns true when this restart batch unauthorized response has a 2xx status code
func (o *RestartBatchUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restart batch unauthorized response has a 3xx status code
func (o *RestartBatchUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restart batch unauthorized response has a 4xx status code
func (o *RestartBatchUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this restart batch unauthorized response has a 5xx status code
func (o *RestartBatchUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this restart batch unauthorized response a status code equal to that given
func (o *RestartBatchUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the restart batch unauthorized response
func (o *RestartBatchUnauthorized) Code() int {
	return 401
}

func (o *RestartBatchUnauthorized) Error() string {
	return fmt.Sprintf("[POST /applications/{appName}/environments/{envName}/jobcomponents/{jobComponentName}/batches/{batchName}/restart][%d] restartBatchUnauthorized ", 401)
}

func (o *RestartBatchUnauthorized) String() string {
	return fmt.Sprintf("[POST /applications/{appName}/environments/{envName}/jobcomponents/{jobComponentName}/batches/{batchName}/restart][%d] restartBatchUnauthorized ", 401)
}

func (o *RestartBatchUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRestartBatchForbidden creates a RestartBatchForbidden with default headers values
func NewRestartBatchForbidden() *RestartBatchForbidden {
	return &RestartBatchForbidden{}
}

/*
RestartBatchForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type RestartBatchForbidden struct {
}

// IsSuccess returns true when this restart batch forbidden response has a 2xx status code
func (o *RestartBatchForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restart batch forbidden response has a 3xx status code
func (o *RestartBatchForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restart batch forbidden response has a 4xx status code
func (o *RestartBatchForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this restart batch forbidden response has a 5xx status code
func (o *RestartBatchForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this restart batch forbidden response a status code equal to that given
func (o *RestartBatchForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the restart batch forbidden response
func (o *RestartBatchForbidden) Code() int {
	return 403
}

func (o *RestartBatchForbidden) Error() string {
	return fmt.Sprintf("[POST /applications/{appName}/environments/{envName}/jobcomponents/{jobComponentName}/batches/{batchName}/restart][%d] restartBatchForbidden ", 403)
}

func (o *RestartBatchForbidden) String() string {
	return fmt.Sprintf("[POST /applications/{appName}/environments/{envName}/jobcomponents/{jobComponentName}/batches/{batchName}/restart][%d] restartBatchForbidden ", 403)
}

func (o *RestartBatchForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRestartBatchNotFound creates a RestartBatchNotFound with default headers values
func NewRestartBatchNotFound() *RestartBatchNotFound {
	return &RestartBatchNotFound{}
}

/*
RestartBatchNotFound describes a response with status code 404, with default header values.

Not found
*/
type RestartBatchNotFound struct {
}

// IsSuccess returns true when this restart batch not found response has a 2xx status code
func (o *RestartBatchNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restart batch not found response has a 3xx status code
func (o *RestartBatchNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restart batch not found response has a 4xx status code
func (o *RestartBatchNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this restart batch not found response has a 5xx status code
func (o *RestartBatchNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this restart batch not found response a status code equal to that given
func (o *RestartBatchNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the restart batch not found response
func (o *RestartBatchNotFound) Code() int {
	return 404
}

func (o *RestartBatchNotFound) Error() string {
	return fmt.Sprintf("[POST /applications/{appName}/environments/{envName}/jobcomponents/{jobComponentName}/batches/{batchName}/restart][%d] restartBatchNotFound ", 404)
}

func (o *RestartBatchNotFound) String() string {
	return fmt.Sprintf("[POST /applications/{appName}/environments/{envName}/jobcomponents/{jobComponentName}/batches/{batchName}/restart][%d] restartBatchNotFound ", 404)
}

func (o *RestartBatchNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
