// Code generated by go-swagger; DO NOT EDIT.

package job

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetJobPayloadParams creates a new GetJobPayloadParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetJobPayloadParams() *GetJobPayloadParams {
	return &GetJobPayloadParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetJobPayloadParamsWithTimeout creates a new GetJobPayloadParams object
// with the ability to set a timeout on a request.
func NewGetJobPayloadParamsWithTimeout(timeout time.Duration) *GetJobPayloadParams {
	return &GetJobPayloadParams{
		timeout: timeout,
	}
}

// NewGetJobPayloadParamsWithContext creates a new GetJobPayloadParams object
// with the ability to set a context for a request.
func NewGetJobPayloadParamsWithContext(ctx context.Context) *GetJobPayloadParams {
	return &GetJobPayloadParams{
		Context: ctx,
	}
}

// NewGetJobPayloadParamsWithHTTPClient creates a new GetJobPayloadParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetJobPayloadParamsWithHTTPClient(client *http.Client) *GetJobPayloadParams {
	return &GetJobPayloadParams{
		HTTPClient: client,
	}
}

/*
GetJobPayloadParams contains all the parameters to send to the API endpoint

	for the get job payload operation.

	Typically these are written to a http.Request.
*/
type GetJobPayloadParams struct {

	/* ImpersonateGroup.

	   Works only with custom setup of cluster. Allow impersonation of test group (Required if Impersonate-User is set)
	*/
	ImpersonateGroup []string

	/* ImpersonateUser.

	   Works only with custom setup of cluster. Allow impersonation of test users (Required if Impersonate-Group is set)
	*/
	ImpersonateUser *string

	/* AppName.

	   Name of application
	*/
	AppName string

	/* EnvName.

	   Name of environment
	*/
	EnvName string

	/* JobComponentName.

	   Name of job-component
	*/
	JobComponentName string

	/* JobName.

	   Name of job
	*/
	JobName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get job payload params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetJobPayloadParams) WithDefaults() *GetJobPayloadParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get job payload params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetJobPayloadParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get job payload params
func (o *GetJobPayloadParams) WithTimeout(timeout time.Duration) *GetJobPayloadParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get job payload params
func (o *GetJobPayloadParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get job payload params
func (o *GetJobPayloadParams) WithContext(ctx context.Context) *GetJobPayloadParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get job payload params
func (o *GetJobPayloadParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get job payload params
func (o *GetJobPayloadParams) WithHTTPClient(client *http.Client) *GetJobPayloadParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get job payload params
func (o *GetJobPayloadParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithImpersonateGroup adds the impersonateGroup to the get job payload params
func (o *GetJobPayloadParams) WithImpersonateGroup(impersonateGroup []string) *GetJobPayloadParams {
	o.SetImpersonateGroup(impersonateGroup)
	return o
}

// SetImpersonateGroup adds the impersonateGroup to the get job payload params
func (o *GetJobPayloadParams) SetImpersonateGroup(impersonateGroup []string) {
	o.ImpersonateGroup = impersonateGroup
}

// WithImpersonateUser adds the impersonateUser to the get job payload params
func (o *GetJobPayloadParams) WithImpersonateUser(impersonateUser *string) *GetJobPayloadParams {
	o.SetImpersonateUser(impersonateUser)
	return o
}

// SetImpersonateUser adds the impersonateUser to the get job payload params
func (o *GetJobPayloadParams) SetImpersonateUser(impersonateUser *string) {
	o.ImpersonateUser = impersonateUser
}

// WithAppName adds the appName to the get job payload params
func (o *GetJobPayloadParams) WithAppName(appName string) *GetJobPayloadParams {
	o.SetAppName(appName)
	return o
}

// SetAppName adds the appName to the get job payload params
func (o *GetJobPayloadParams) SetAppName(appName string) {
	o.AppName = appName
}

// WithEnvName adds the envName to the get job payload params
func (o *GetJobPayloadParams) WithEnvName(envName string) *GetJobPayloadParams {
	o.SetEnvName(envName)
	return o
}

// SetEnvName adds the envName to the get job payload params
func (o *GetJobPayloadParams) SetEnvName(envName string) {
	o.EnvName = envName
}

// WithJobComponentName adds the jobComponentName to the get job payload params
func (o *GetJobPayloadParams) WithJobComponentName(jobComponentName string) *GetJobPayloadParams {
	o.SetJobComponentName(jobComponentName)
	return o
}

// SetJobComponentName adds the jobComponentName to the get job payload params
func (o *GetJobPayloadParams) SetJobComponentName(jobComponentName string) {
	o.JobComponentName = jobComponentName
}

// WithJobName adds the jobName to the get job payload params
func (o *GetJobPayloadParams) WithJobName(jobName string) *GetJobPayloadParams {
	o.SetJobName(jobName)
	return o
}

// SetJobName adds the jobName to the get job payload params
func (o *GetJobPayloadParams) SetJobName(jobName string) {
	o.JobName = jobName
}

// WriteToRequest writes these params to a swagger request
func (o *GetJobPayloadParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ImpersonateGroup != nil {

		// binding items for Impersonate-Group
		joinedImpersonateGroup := o.bindParamImpersonateGroup(reg)

		// header array param Impersonate-Group
		if len(joinedImpersonateGroup) > 0 {
			if err := r.SetHeaderParam("Impersonate-Group", joinedImpersonateGroup[0]); err != nil {
				return err
			}
		}
	}

	if o.ImpersonateUser != nil {

		// header param Impersonate-User
		if err := r.SetHeaderParam("Impersonate-User", *o.ImpersonateUser); err != nil {
			return err
		}
	}

	// path param appName
	if err := r.SetPathParam("appName", o.AppName); err != nil {
		return err
	}

	// path param envName
	if err := r.SetPathParam("envName", o.EnvName); err != nil {
		return err
	}

	// path param jobComponentName
	if err := r.SetPathParam("jobComponentName", o.JobComponentName); err != nil {
		return err
	}

	// path param jobName
	if err := r.SetPathParam("jobName", o.JobName); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetJobPayload binds the parameter Impersonate-Group
func (o *GetJobPayloadParams) bindParamImpersonateGroup(formats strfmt.Registry) []string {
	impersonateGroupIR := o.ImpersonateGroup

	var impersonateGroupIC []string
	for _, impersonateGroupIIR := range impersonateGroupIR { // explode []string

		impersonateGroupIIV := impersonateGroupIIR // string as string
		impersonateGroupIC = append(impersonateGroupIC, impersonateGroupIIV)
	}

	// items.CollectionFormat: ""
	impersonateGroupIS := swag.JoinByFormat(impersonateGroupIC, "")

	return impersonateGroupIS
}
