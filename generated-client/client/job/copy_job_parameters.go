// Code generated by go-swagger; DO NOT EDIT.

package job

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/equinor/radix-cli/generated-client/models"
)

// NewCopyJobParams creates a new CopyJobParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCopyJobParams() *CopyJobParams {
	return &CopyJobParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCopyJobParamsWithTimeout creates a new CopyJobParams object
// with the ability to set a timeout on a request.
func NewCopyJobParamsWithTimeout(timeout time.Duration) *CopyJobParams {
	return &CopyJobParams{
		timeout: timeout,
	}
}

// NewCopyJobParamsWithContext creates a new CopyJobParams object
// with the ability to set a context for a request.
func NewCopyJobParamsWithContext(ctx context.Context) *CopyJobParams {
	return &CopyJobParams{
		Context: ctx,
	}
}

// NewCopyJobParamsWithHTTPClient creates a new CopyJobParams object
// with the ability to set a custom HTTPClient for a request.
func NewCopyJobParamsWithHTTPClient(client *http.Client) *CopyJobParams {
	return &CopyJobParams{
		HTTPClient: client,
	}
}

/*
CopyJobParams contains all the parameters to send to the API endpoint

	for the copy job operation.

	Typically these are written to a http.Request.
*/
type CopyJobParams struct {

	/* ImpersonateGroup.

	   Works only with custom setup of cluster. Allow impersonation of a comma-seperated list of test groups (Required if Impersonate-User is set)
	*/
	ImpersonateGroup *string

	/* ImpersonateUser.

	   Works only with custom setup of cluster. Allow impersonation of test users (Required if Impersonate-Group is set)
	*/
	ImpersonateUser *string

	/* AppName.

	   Name of application
	*/
	AppName string

	/* EnvName.

	   Name of environment
	*/
	EnvName string

	/* JobComponentName.

	   Name of job-component
	*/
	JobComponentName string

	/* JobName.

	   Name of job to be copied
	*/
	JobName string

	/* ScheduledJobRequest.

	   Request for creating a scheduled job
	*/
	ScheduledJobRequest *models.ScheduledJobRequest

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the copy job params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CopyJobParams) WithDefaults() *CopyJobParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the copy job params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CopyJobParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the copy job params
func (o *CopyJobParams) WithTimeout(timeout time.Duration) *CopyJobParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the copy job params
func (o *CopyJobParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the copy job params
func (o *CopyJobParams) WithContext(ctx context.Context) *CopyJobParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the copy job params
func (o *CopyJobParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the copy job params
func (o *CopyJobParams) WithHTTPClient(client *http.Client) *CopyJobParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the copy job params
func (o *CopyJobParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithImpersonateGroup adds the impersonateGroup to the copy job params
func (o *CopyJobParams) WithImpersonateGroup(impersonateGroup *string) *CopyJobParams {
	o.SetImpersonateGroup(impersonateGroup)
	return o
}

// SetImpersonateGroup adds the impersonateGroup to the copy job params
func (o *CopyJobParams) SetImpersonateGroup(impersonateGroup *string) {
	o.ImpersonateGroup = impersonateGroup
}

// WithImpersonateUser adds the impersonateUser to the copy job params
func (o *CopyJobParams) WithImpersonateUser(impersonateUser *string) *CopyJobParams {
	o.SetImpersonateUser(impersonateUser)
	return o
}

// SetImpersonateUser adds the impersonateUser to the copy job params
func (o *CopyJobParams) SetImpersonateUser(impersonateUser *string) {
	o.ImpersonateUser = impersonateUser
}

// WithAppName adds the appName to the copy job params
func (o *CopyJobParams) WithAppName(appName string) *CopyJobParams {
	o.SetAppName(appName)
	return o
}

// SetAppName adds the appName to the copy job params
func (o *CopyJobParams) SetAppName(appName string) {
	o.AppName = appName
}

// WithEnvName adds the envName to the copy job params
func (o *CopyJobParams) WithEnvName(envName string) *CopyJobParams {
	o.SetEnvName(envName)
	return o
}

// SetEnvName adds the envName to the copy job params
func (o *CopyJobParams) SetEnvName(envName string) {
	o.EnvName = envName
}

// WithJobComponentName adds the jobComponentName to the copy job params
func (o *CopyJobParams) WithJobComponentName(jobComponentName string) *CopyJobParams {
	o.SetJobComponentName(jobComponentName)
	return o
}

// SetJobComponentName adds the jobComponentName to the copy job params
func (o *CopyJobParams) SetJobComponentName(jobComponentName string) {
	o.JobComponentName = jobComponentName
}

// WithJobName adds the jobName to the copy job params
func (o *CopyJobParams) WithJobName(jobName string) *CopyJobParams {
	o.SetJobName(jobName)
	return o
}

// SetJobName adds the jobName to the copy job params
func (o *CopyJobParams) SetJobName(jobName string) {
	o.JobName = jobName
}

// WithScheduledJobRequest adds the scheduledJobRequest to the copy job params
func (o *CopyJobParams) WithScheduledJobRequest(scheduledJobRequest *models.ScheduledJobRequest) *CopyJobParams {
	o.SetScheduledJobRequest(scheduledJobRequest)
	return o
}

// SetScheduledJobRequest adds the scheduledJobRequest to the copy job params
func (o *CopyJobParams) SetScheduledJobRequest(scheduledJobRequest *models.ScheduledJobRequest) {
	o.ScheduledJobRequest = scheduledJobRequest
}

// WriteToRequest writes these params to a swagger request
func (o *CopyJobParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ImpersonateGroup != nil {

		// header param Impersonate-Group
		if err := r.SetHeaderParam("Impersonate-Group", *o.ImpersonateGroup); err != nil {
			return err
		}
	}

	if o.ImpersonateUser != nil {

		// header param Impersonate-User
		if err := r.SetHeaderParam("Impersonate-User", *o.ImpersonateUser); err != nil {
			return err
		}
	}

	// path param appName
	if err := r.SetPathParam("appName", o.AppName); err != nil {
		return err
	}

	// path param envName
	if err := r.SetPathParam("envName", o.EnvName); err != nil {
		return err
	}

	// path param jobComponentName
	if err := r.SetPathParam("jobComponentName", o.JobComponentName); err != nil {
		return err
	}

	// path param jobName
	if err := r.SetPathParam("jobName", o.JobName); err != nil {
		return err
	}
	if o.ScheduledJobRequest != nil {
		if err := r.SetBodyParam(o.ScheduledJobRequest); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
