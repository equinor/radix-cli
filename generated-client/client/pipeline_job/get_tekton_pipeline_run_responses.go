// Code generated by go-swagger; DO NOT EDIT.

package pipeline_job

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/equinor/radix-cli/generated-client/models"
)

// GetTektonPipelineRunReader is a Reader for the GetTektonPipelineRun structure.
type GetTektonPipelineRunReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTektonPipelineRunReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTektonPipelineRunOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetTektonPipelineRunUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetTektonPipelineRunNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /applications/{appName}/jobs/{jobName}/pipelineruns/{pipelineRunName}] getTektonPipelineRun", response, response.Code())
	}
}

// NewGetTektonPipelineRunOK creates a GetTektonPipelineRunOK with default headers values
func NewGetTektonPipelineRunOK() *GetTektonPipelineRunOK {
	return &GetTektonPipelineRunOK{}
}

/*
GetTektonPipelineRunOK describes a response with status code 200, with default header values.

List of Pipeline Runs
*/
type GetTektonPipelineRunOK struct {
	Payload *models.PipelineRun
}

// IsSuccess returns true when this get tekton pipeline run o k response has a 2xx status code
func (o *GetTektonPipelineRunOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get tekton pipeline run o k response has a 3xx status code
func (o *GetTektonPipelineRunOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tekton pipeline run o k response has a 4xx status code
func (o *GetTektonPipelineRunOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get tekton pipeline run o k response has a 5xx status code
func (o *GetTektonPipelineRunOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get tekton pipeline run o k response a status code equal to that given
func (o *GetTektonPipelineRunOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get tekton pipeline run o k response
func (o *GetTektonPipelineRunOK) Code() int {
	return 200
}

func (o *GetTektonPipelineRunOK) Error() string {
	return fmt.Sprintf("[GET /applications/{appName}/jobs/{jobName}/pipelineruns/{pipelineRunName}][%d] getTektonPipelineRunOK  %+v", 200, o.Payload)
}

func (o *GetTektonPipelineRunOK) String() string {
	return fmt.Sprintf("[GET /applications/{appName}/jobs/{jobName}/pipelineruns/{pipelineRunName}][%d] getTektonPipelineRunOK  %+v", 200, o.Payload)
}

func (o *GetTektonPipelineRunOK) GetPayload() *models.PipelineRun {
	return o.Payload
}

func (o *GetTektonPipelineRunOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PipelineRun)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTektonPipelineRunUnauthorized creates a GetTektonPipelineRunUnauthorized with default headers values
func NewGetTektonPipelineRunUnauthorized() *GetTektonPipelineRunUnauthorized {
	return &GetTektonPipelineRunUnauthorized{}
}

/*
GetTektonPipelineRunUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetTektonPipelineRunUnauthorized struct {
}

// IsSuccess returns true when this get tekton pipeline run unauthorized response has a 2xx status code
func (o *GetTektonPipelineRunUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get tekton pipeline run unauthorized response has a 3xx status code
func (o *GetTektonPipelineRunUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tekton pipeline run unauthorized response has a 4xx status code
func (o *GetTektonPipelineRunUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get tekton pipeline run unauthorized response has a 5xx status code
func (o *GetTektonPipelineRunUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get tekton pipeline run unauthorized response a status code equal to that given
func (o *GetTektonPipelineRunUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get tekton pipeline run unauthorized response
func (o *GetTektonPipelineRunUnauthorized) Code() int {
	return 401
}

func (o *GetTektonPipelineRunUnauthorized) Error() string {
	return fmt.Sprintf("[GET /applications/{appName}/jobs/{jobName}/pipelineruns/{pipelineRunName}][%d] getTektonPipelineRunUnauthorized ", 401)
}

func (o *GetTektonPipelineRunUnauthorized) String() string {
	return fmt.Sprintf("[GET /applications/{appName}/jobs/{jobName}/pipelineruns/{pipelineRunName}][%d] getTektonPipelineRunUnauthorized ", 401)
}

func (o *GetTektonPipelineRunUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTektonPipelineRunNotFound creates a GetTektonPipelineRunNotFound with default headers values
func NewGetTektonPipelineRunNotFound() *GetTektonPipelineRunNotFound {
	return &GetTektonPipelineRunNotFound{}
}

/*
GetTektonPipelineRunNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetTektonPipelineRunNotFound struct {
}

// IsSuccess returns true when this get tekton pipeline run not found response has a 2xx status code
func (o *GetTektonPipelineRunNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get tekton pipeline run not found response has a 3xx status code
func (o *GetTektonPipelineRunNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tekton pipeline run not found response has a 4xx status code
func (o *GetTektonPipelineRunNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get tekton pipeline run not found response has a 5xx status code
func (o *GetTektonPipelineRunNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get tekton pipeline run not found response a status code equal to that given
func (o *GetTektonPipelineRunNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get tekton pipeline run not found response
func (o *GetTektonPipelineRunNotFound) Code() int {
	return 404
}

func (o *GetTektonPipelineRunNotFound) Error() string {
	return fmt.Sprintf("[GET /applications/{appName}/jobs/{jobName}/pipelineruns/{pipelineRunName}][%d] getTektonPipelineRunNotFound ", 404)
}

func (o *GetTektonPipelineRunNotFound) String() string {
	return fmt.Sprintf("[GET /applications/{appName}/jobs/{jobName}/pipelineruns/{pipelineRunName}][%d] getTektonPipelineRunNotFound ", 404)
}

func (o *GetTektonPipelineRunNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
