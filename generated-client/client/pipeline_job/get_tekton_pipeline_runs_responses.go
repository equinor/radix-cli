// Code generated by go-swagger; DO NOT EDIT.

package pipeline_job

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/equinor/radix-cli/generated-client/models"
)

// GetTektonPipelineRunsReader is a Reader for the GetTektonPipelineRuns structure.
type GetTektonPipelineRunsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTektonPipelineRunsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTektonPipelineRunsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetTektonPipelineRunsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetTektonPipelineRunsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /applications/{appName}/jobs/{jobName}/pipelineruns] getTektonPipelineRuns", response, response.Code())
	}
}

// NewGetTektonPipelineRunsOK creates a GetTektonPipelineRunsOK with default headers values
func NewGetTektonPipelineRunsOK() *GetTektonPipelineRunsOK {
	return &GetTektonPipelineRunsOK{}
}

/*
GetTektonPipelineRunsOK describes a response with status code 200, with default header values.

List of PipelineRun-s
*/
type GetTektonPipelineRunsOK struct {
	Payload []*models.PipelineRun
}

// IsSuccess returns true when this get tekton pipeline runs o k response has a 2xx status code
func (o *GetTektonPipelineRunsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get tekton pipeline runs o k response has a 3xx status code
func (o *GetTektonPipelineRunsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tekton pipeline runs o k response has a 4xx status code
func (o *GetTektonPipelineRunsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get tekton pipeline runs o k response has a 5xx status code
func (o *GetTektonPipelineRunsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get tekton pipeline runs o k response a status code equal to that given
func (o *GetTektonPipelineRunsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get tekton pipeline runs o k response
func (o *GetTektonPipelineRunsOK) Code() int {
	return 200
}

func (o *GetTektonPipelineRunsOK) Error() string {
	return fmt.Sprintf("[GET /applications/{appName}/jobs/{jobName}/pipelineruns][%d] getTektonPipelineRunsOK  %+v", 200, o.Payload)
}

func (o *GetTektonPipelineRunsOK) String() string {
	return fmt.Sprintf("[GET /applications/{appName}/jobs/{jobName}/pipelineruns][%d] getTektonPipelineRunsOK  %+v", 200, o.Payload)
}

func (o *GetTektonPipelineRunsOK) GetPayload() []*models.PipelineRun {
	return o.Payload
}

func (o *GetTektonPipelineRunsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTektonPipelineRunsUnauthorized creates a GetTektonPipelineRunsUnauthorized with default headers values
func NewGetTektonPipelineRunsUnauthorized() *GetTektonPipelineRunsUnauthorized {
	return &GetTektonPipelineRunsUnauthorized{}
}

/*
GetTektonPipelineRunsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetTektonPipelineRunsUnauthorized struct {
}

// IsSuccess returns true when this get tekton pipeline runs unauthorized response has a 2xx status code
func (o *GetTektonPipelineRunsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get tekton pipeline runs unauthorized response has a 3xx status code
func (o *GetTektonPipelineRunsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tekton pipeline runs unauthorized response has a 4xx status code
func (o *GetTektonPipelineRunsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get tekton pipeline runs unauthorized response has a 5xx status code
func (o *GetTektonPipelineRunsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get tekton pipeline runs unauthorized response a status code equal to that given
func (o *GetTektonPipelineRunsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get tekton pipeline runs unauthorized response
func (o *GetTektonPipelineRunsUnauthorized) Code() int {
	return 401
}

func (o *GetTektonPipelineRunsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /applications/{appName}/jobs/{jobName}/pipelineruns][%d] getTektonPipelineRunsUnauthorized ", 401)
}

func (o *GetTektonPipelineRunsUnauthorized) String() string {
	return fmt.Sprintf("[GET /applications/{appName}/jobs/{jobName}/pipelineruns][%d] getTektonPipelineRunsUnauthorized ", 401)
}

func (o *GetTektonPipelineRunsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTektonPipelineRunsNotFound creates a GetTektonPipelineRunsNotFound with default headers values
func NewGetTektonPipelineRunsNotFound() *GetTektonPipelineRunsNotFound {
	return &GetTektonPipelineRunsNotFound{}
}

/*
GetTektonPipelineRunsNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetTektonPipelineRunsNotFound struct {
}

// IsSuccess returns true when this get tekton pipeline runs not found response has a 2xx status code
func (o *GetTektonPipelineRunsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get tekton pipeline runs not found response has a 3xx status code
func (o *GetTektonPipelineRunsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tekton pipeline runs not found response has a 4xx status code
func (o *GetTektonPipelineRunsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get tekton pipeline runs not found response has a 5xx status code
func (o *GetTektonPipelineRunsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get tekton pipeline runs not found response a status code equal to that given
func (o *GetTektonPipelineRunsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get tekton pipeline runs not found response
func (o *GetTektonPipelineRunsNotFound) Code() int {
	return 404
}

func (o *GetTektonPipelineRunsNotFound) Error() string {
	return fmt.Sprintf("[GET /applications/{appName}/jobs/{jobName}/pipelineruns][%d] getTektonPipelineRunsNotFound ", 404)
}

func (o *GetTektonPipelineRunsNotFound) String() string {
	return fmt.Sprintf("[GET /applications/{appName}/jobs/{jobName}/pipelineruns][%d] getTektonPipelineRunsNotFound ", 404)
}

func (o *GetTektonPipelineRunsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
