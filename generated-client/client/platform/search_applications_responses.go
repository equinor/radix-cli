// Code generated by go-swagger; DO NOT EDIT.

package platform

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/equinor/radix-cli/generated-client/models"
)

// SearchApplicationsReader is a Reader for the SearchApplications structure.
type SearchApplicationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchApplicationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSearchApplicationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewSearchApplicationsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSearchApplicationsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSearchApplicationsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewSearchApplicationsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSearchApplicationsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /applications/_search] searchApplications", response, response.Code())
	}
}

// NewSearchApplicationsOK creates a SearchApplicationsOK with default headers values
func NewSearchApplicationsOK() *SearchApplicationsOK {
	return &SearchApplicationsOK{}
}

/*
SearchApplicationsOK describes a response with status code 200, with default header values.

Successful operation
*/
type SearchApplicationsOK struct {
	Payload []*models.ApplicationSummary
}

// IsSuccess returns true when this search applications o k response has a 2xx status code
func (o *SearchApplicationsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this search applications o k response has a 3xx status code
func (o *SearchApplicationsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search applications o k response has a 4xx status code
func (o *SearchApplicationsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this search applications o k response has a 5xx status code
func (o *SearchApplicationsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this search applications o k response a status code equal to that given
func (o *SearchApplicationsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the search applications o k response
func (o *SearchApplicationsOK) Code() int {
	return 200
}

func (o *SearchApplicationsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /applications/_search][%d] searchApplicationsOK %s", 200, payload)
}

func (o *SearchApplicationsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /applications/_search][%d] searchApplicationsOK %s", 200, payload)
}

func (o *SearchApplicationsOK) GetPayload() []*models.ApplicationSummary {
	return o.Payload
}

func (o *SearchApplicationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchApplicationsUnauthorized creates a SearchApplicationsUnauthorized with default headers values
func NewSearchApplicationsUnauthorized() *SearchApplicationsUnauthorized {
	return &SearchApplicationsUnauthorized{}
}

/*
SearchApplicationsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SearchApplicationsUnauthorized struct {
}

// IsSuccess returns true when this search applications unauthorized response has a 2xx status code
func (o *SearchApplicationsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search applications unauthorized response has a 3xx status code
func (o *SearchApplicationsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search applications unauthorized response has a 4xx status code
func (o *SearchApplicationsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this search applications unauthorized response has a 5xx status code
func (o *SearchApplicationsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this search applications unauthorized response a status code equal to that given
func (o *SearchApplicationsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the search applications unauthorized response
func (o *SearchApplicationsUnauthorized) Code() int {
	return 401
}

func (o *SearchApplicationsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /applications/_search][%d] searchApplicationsUnauthorized", 401)
}

func (o *SearchApplicationsUnauthorized) String() string {
	return fmt.Sprintf("[POST /applications/_search][%d] searchApplicationsUnauthorized", 401)
}

func (o *SearchApplicationsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSearchApplicationsForbidden creates a SearchApplicationsForbidden with default headers values
func NewSearchApplicationsForbidden() *SearchApplicationsForbidden {
	return &SearchApplicationsForbidden{}
}

/*
SearchApplicationsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SearchApplicationsForbidden struct {
}

// IsSuccess returns true when this search applications forbidden response has a 2xx status code
func (o *SearchApplicationsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search applications forbidden response has a 3xx status code
func (o *SearchApplicationsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search applications forbidden response has a 4xx status code
func (o *SearchApplicationsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this search applications forbidden response has a 5xx status code
func (o *SearchApplicationsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this search applications forbidden response a status code equal to that given
func (o *SearchApplicationsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the search applications forbidden response
func (o *SearchApplicationsForbidden) Code() int {
	return 403
}

func (o *SearchApplicationsForbidden) Error() string {
	return fmt.Sprintf("[POST /applications/_search][%d] searchApplicationsForbidden", 403)
}

func (o *SearchApplicationsForbidden) String() string {
	return fmt.Sprintf("[POST /applications/_search][%d] searchApplicationsForbidden", 403)
}

func (o *SearchApplicationsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSearchApplicationsNotFound creates a SearchApplicationsNotFound with default headers values
func NewSearchApplicationsNotFound() *SearchApplicationsNotFound {
	return &SearchApplicationsNotFound{}
}

/*
SearchApplicationsNotFound describes a response with status code 404, with default header values.

Not found
*/
type SearchApplicationsNotFound struct {
}

// IsSuccess returns true when this search applications not found response has a 2xx status code
func (o *SearchApplicationsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search applications not found response has a 3xx status code
func (o *SearchApplicationsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search applications not found response has a 4xx status code
func (o *SearchApplicationsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this search applications not found response has a 5xx status code
func (o *SearchApplicationsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this search applications not found response a status code equal to that given
func (o *SearchApplicationsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the search applications not found response
func (o *SearchApplicationsNotFound) Code() int {
	return 404
}

func (o *SearchApplicationsNotFound) Error() string {
	return fmt.Sprintf("[POST /applications/_search][%d] searchApplicationsNotFound", 404)
}

func (o *SearchApplicationsNotFound) String() string {
	return fmt.Sprintf("[POST /applications/_search][%d] searchApplicationsNotFound", 404)
}

func (o *SearchApplicationsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSearchApplicationsConflict creates a SearchApplicationsConflict with default headers values
func NewSearchApplicationsConflict() *SearchApplicationsConflict {
	return &SearchApplicationsConflict{}
}

/*
SearchApplicationsConflict describes a response with status code 409, with default header values.

Conflict
*/
type SearchApplicationsConflict struct {
}

// IsSuccess returns true when this search applications conflict response has a 2xx status code
func (o *SearchApplicationsConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search applications conflict response has a 3xx status code
func (o *SearchApplicationsConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search applications conflict response has a 4xx status code
func (o *SearchApplicationsConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this search applications conflict response has a 5xx status code
func (o *SearchApplicationsConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this search applications conflict response a status code equal to that given
func (o *SearchApplicationsConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the search applications conflict response
func (o *SearchApplicationsConflict) Code() int {
	return 409
}

func (o *SearchApplicationsConflict) Error() string {
	return fmt.Sprintf("[POST /applications/_search][%d] searchApplicationsConflict", 409)
}

func (o *SearchApplicationsConflict) String() string {
	return fmt.Sprintf("[POST /applications/_search][%d] searchApplicationsConflict", 409)
}

func (o *SearchApplicationsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSearchApplicationsInternalServerError creates a SearchApplicationsInternalServerError with default headers values
func NewSearchApplicationsInternalServerError() *SearchApplicationsInternalServerError {
	return &SearchApplicationsInternalServerError{}
}

/*
SearchApplicationsInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type SearchApplicationsInternalServerError struct {
}

// IsSuccess returns true when this search applications internal server error response has a 2xx status code
func (o *SearchApplicationsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search applications internal server error response has a 3xx status code
func (o *SearchApplicationsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search applications internal server error response has a 4xx status code
func (o *SearchApplicationsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this search applications internal server error response has a 5xx status code
func (o *SearchApplicationsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this search applications internal server error response a status code equal to that given
func (o *SearchApplicationsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the search applications internal server error response
func (o *SearchApplicationsInternalServerError) Code() int {
	return 500
}

func (o *SearchApplicationsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /applications/_search][%d] searchApplicationsInternalServerError", 500)
}

func (o *SearchApplicationsInternalServerError) String() string {
	return fmt.Sprintf("[POST /applications/_search][%d] searchApplicationsInternalServerError", 500)
}

func (o *SearchApplicationsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
