// Code generated by go-swagger; DO NOT EDIT.

package component

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// LogReader is a Reader for the Log structure.
type LogReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LogReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLogOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewLogNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /applications/{appName}/deployments/{deploymentName}/components/{componentName}/replicas/{podName}/logs] log", response, response.Code())
	}
}

// NewLogOK creates a LogOK with default headers values
func NewLogOK() *LogOK {
	return &LogOK{}
}

/*
LogOK describes a response with status code 200, with default header values.

pod log
*/
type LogOK struct {
	Payload string
}

// IsSuccess returns true when this log o k response has a 2xx status code
func (o *LogOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this log o k response has a 3xx status code
func (o *LogOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this log o k response has a 4xx status code
func (o *LogOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this log o k response has a 5xx status code
func (o *LogOK) IsServerError() bool {
	return false
}

// IsCode returns true when this log o k response a status code equal to that given
func (o *LogOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the log o k response
func (o *LogOK) Code() int {
	return 200
}

func (o *LogOK) Error() string {
	return fmt.Sprintf("[GET /applications/{appName}/deployments/{deploymentName}/components/{componentName}/replicas/{podName}/logs][%d] logOK  %+v", 200, o.Payload)
}

func (o *LogOK) String() string {
	return fmt.Sprintf("[GET /applications/{appName}/deployments/{deploymentName}/components/{componentName}/replicas/{podName}/logs][%d] logOK  %+v", 200, o.Payload)
}

func (o *LogOK) GetPayload() string {
	return o.Payload
}

func (o *LogOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLogNotFound creates a LogNotFound with default headers values
func NewLogNotFound() *LogNotFound {
	return &LogNotFound{}
}

/*
LogNotFound describes a response with status code 404, with default header values.

Not found
*/
type LogNotFound struct {
}

// IsSuccess returns true when this log not found response has a 2xx status code
func (o *LogNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this log not found response has a 3xx status code
func (o *LogNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this log not found response has a 4xx status code
func (o *LogNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this log not found response has a 5xx status code
func (o *LogNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this log not found response a status code equal to that given
func (o *LogNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the log not found response
func (o *LogNotFound) Code() int {
	return 404
}

func (o *LogNotFound) Error() string {
	return fmt.Sprintf("[GET /applications/{appName}/deployments/{deploymentName}/components/{componentName}/replicas/{podName}/logs][%d] logNotFound ", 404)
}

func (o *LogNotFound) String() string {
	return fmt.Sprintf("[GET /applications/{appName}/deployments/{deploymentName}/components/{componentName}/replicas/{podName}/logs][%d] logNotFound ", 404)
}

func (o *LogNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
