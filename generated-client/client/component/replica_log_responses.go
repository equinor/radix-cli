// Code generated by go-swagger; DO NOT EDIT.

package component

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// ReplicaLogReader is a Reader for the ReplicaLog structure.
type ReplicaLogReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReplicaLogReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewReplicaLogOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewReplicaLogNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /applications/{appName}/environments/{envName}/components/{componentName}/replicas/{podName}/logs] replicaLog", response, response.Code())
	}
}

// NewReplicaLogOK creates a ReplicaLogOK with default headers values
func NewReplicaLogOK() *ReplicaLogOK {
	return &ReplicaLogOK{}
}

/*
ReplicaLogOK describes a response with status code 200, with default header values.

pod log
*/
type ReplicaLogOK struct {
	Payload string
}

// IsSuccess returns true when this replica log o k response has a 2xx status code
func (o *ReplicaLogOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this replica log o k response has a 3xx status code
func (o *ReplicaLogOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this replica log o k response has a 4xx status code
func (o *ReplicaLogOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this replica log o k response has a 5xx status code
func (o *ReplicaLogOK) IsServerError() bool {
	return false
}

// IsCode returns true when this replica log o k response a status code equal to that given
func (o *ReplicaLogOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the replica log o k response
func (o *ReplicaLogOK) Code() int {
	return 200
}

func (o *ReplicaLogOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /applications/{appName}/environments/{envName}/components/{componentName}/replicas/{podName}/logs][%d] replicaLogOK %s", 200, payload)
}

func (o *ReplicaLogOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /applications/{appName}/environments/{envName}/components/{componentName}/replicas/{podName}/logs][%d] replicaLogOK %s", 200, payload)
}

func (o *ReplicaLogOK) GetPayload() string {
	return o.Payload
}

func (o *ReplicaLogOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReplicaLogNotFound creates a ReplicaLogNotFound with default headers values
func NewReplicaLogNotFound() *ReplicaLogNotFound {
	return &ReplicaLogNotFound{}
}

/*
ReplicaLogNotFound describes a response with status code 404, with default header values.

Not found
*/
type ReplicaLogNotFound struct {
}

// IsSuccess returns true when this replica log not found response has a 2xx status code
func (o *ReplicaLogNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this replica log not found response has a 3xx status code
func (o *ReplicaLogNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this replica log not found response has a 4xx status code
func (o *ReplicaLogNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this replica log not found response has a 5xx status code
func (o *ReplicaLogNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this replica log not found response a status code equal to that given
func (o *ReplicaLogNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the replica log not found response
func (o *ReplicaLogNotFound) Code() int {
	return 404
}

func (o *ReplicaLogNotFound) Error() string {
	return fmt.Sprintf("[GET /applications/{appName}/environments/{envName}/components/{componentName}/replicas/{podName}/logs][%d] replicaLogNotFound", 404)
}

func (o *ReplicaLogNotFound) String() string {
	return fmt.Sprintf("[GET /applications/{appName}/environments/{envName}/components/{componentName}/replicas/{podName}/logs][%d] replicaLogNotFound", 404)
}

func (o *ReplicaLogNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
