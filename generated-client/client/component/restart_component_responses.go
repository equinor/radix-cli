// Code generated by go-swagger; DO NOT EDIT.

package component

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// RestartComponentReader is a Reader for the RestartComponent structure.
type RestartComponentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RestartComponentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRestartComponentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewRestartComponentUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRestartComponentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /applications/{appName}/environments/{envName}/components/{componentName}/restart] restartComponent", response, response.Code())
	}
}

// NewRestartComponentOK creates a RestartComponentOK with default headers values
func NewRestartComponentOK() *RestartComponentOK {
	return &RestartComponentOK{}
}

/*
RestartComponentOK describes a response with status code 200, with default header values.

Component started ok
*/
type RestartComponentOK struct {
}

// IsSuccess returns true when this restart component o k response has a 2xx status code
func (o *RestartComponentOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this restart component o k response has a 3xx status code
func (o *RestartComponentOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restart component o k response has a 4xx status code
func (o *RestartComponentOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this restart component o k response has a 5xx status code
func (o *RestartComponentOK) IsServerError() bool {
	return false
}

// IsCode returns true when this restart component o k response a status code equal to that given
func (o *RestartComponentOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the restart component o k response
func (o *RestartComponentOK) Code() int {
	return 200
}

func (o *RestartComponentOK) Error() string {
	return fmt.Sprintf("[POST /applications/{appName}/environments/{envName}/components/{componentName}/restart][%d] restartComponentOK ", 200)
}

func (o *RestartComponentOK) String() string {
	return fmt.Sprintf("[POST /applications/{appName}/environments/{envName}/components/{componentName}/restart][%d] restartComponentOK ", 200)
}

func (o *RestartComponentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRestartComponentUnauthorized creates a RestartComponentUnauthorized with default headers values
func NewRestartComponentUnauthorized() *RestartComponentUnauthorized {
	return &RestartComponentUnauthorized{}
}

/*
RestartComponentUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type RestartComponentUnauthorized struct {
}

// IsSuccess returns true when this restart component unauthorized response has a 2xx status code
func (o *RestartComponentUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restart component unauthorized response has a 3xx status code
func (o *RestartComponentUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restart component unauthorized response has a 4xx status code
func (o *RestartComponentUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this restart component unauthorized response has a 5xx status code
func (o *RestartComponentUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this restart component unauthorized response a status code equal to that given
func (o *RestartComponentUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the restart component unauthorized response
func (o *RestartComponentUnauthorized) Code() int {
	return 401
}

func (o *RestartComponentUnauthorized) Error() string {
	return fmt.Sprintf("[POST /applications/{appName}/environments/{envName}/components/{componentName}/restart][%d] restartComponentUnauthorized ", 401)
}

func (o *RestartComponentUnauthorized) String() string {
	return fmt.Sprintf("[POST /applications/{appName}/environments/{envName}/components/{componentName}/restart][%d] restartComponentUnauthorized ", 401)
}

func (o *RestartComponentUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRestartComponentNotFound creates a RestartComponentNotFound with default headers values
func NewRestartComponentNotFound() *RestartComponentNotFound {
	return &RestartComponentNotFound{}
}

/*
RestartComponentNotFound describes a response with status code 404, with default header values.

Not found
*/
type RestartComponentNotFound struct {
}

// IsSuccess returns true when this restart component not found response has a 2xx status code
func (o *RestartComponentNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restart component not found response has a 3xx status code
func (o *RestartComponentNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restart component not found response has a 4xx status code
func (o *RestartComponentNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this restart component not found response has a 5xx status code
func (o *RestartComponentNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this restart component not found response a status code equal to that given
func (o *RestartComponentNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the restart component not found response
func (o *RestartComponentNotFound) Code() int {
	return 404
}

func (o *RestartComponentNotFound) Error() string {
	return fmt.Sprintf("[POST /applications/{appName}/environments/{envName}/components/{componentName}/restart][%d] restartComponentNotFound ", 404)
}

func (o *RestartComponentNotFound) String() string {
	return fmt.Sprintf("[POST /applications/{appName}/environments/{envName}/components/{componentName}/restart][%d] restartComponentNotFound ", 404)
}

func (o *RestartComponentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
