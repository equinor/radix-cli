// Code generated by go-swagger; DO NOT EDIT.

package environment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/equinor/radix-cli/generated/radixapi/models"
)

// GetEnvironmentResourcesUtilizationReader is a Reader for the GetEnvironmentResourcesUtilization structure.
type GetEnvironmentResourcesUtilizationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetEnvironmentResourcesUtilizationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetEnvironmentResourcesUtilizationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetEnvironmentResourcesUtilizationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /applications/{appName}/environments/{envName}/utilization] GetEnvironmentResourcesUtilization", response, response.Code())
	}
}

// NewGetEnvironmentResourcesUtilizationOK creates a GetEnvironmentResourcesUtilizationOK with default headers values
func NewGetEnvironmentResourcesUtilizationOK() *GetEnvironmentResourcesUtilizationOK {
	return &GetEnvironmentResourcesUtilizationOK{}
}

/*
GetEnvironmentResourcesUtilizationOK describes a response with status code 200, with default header values.

Successful trigger pipeline
*/
type GetEnvironmentResourcesUtilizationOK struct {
	Payload *models.ReplicaResourcesUtilizationResponse
}

// IsSuccess returns true when this get environment resources utilization o k response has a 2xx status code
func (o *GetEnvironmentResourcesUtilizationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get environment resources utilization o k response has a 3xx status code
func (o *GetEnvironmentResourcesUtilizationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get environment resources utilization o k response has a 4xx status code
func (o *GetEnvironmentResourcesUtilizationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get environment resources utilization o k response has a 5xx status code
func (o *GetEnvironmentResourcesUtilizationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get environment resources utilization o k response a status code equal to that given
func (o *GetEnvironmentResourcesUtilizationOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get environment resources utilization o k response
func (o *GetEnvironmentResourcesUtilizationOK) Code() int {
	return 200
}

func (o *GetEnvironmentResourcesUtilizationOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /applications/{appName}/environments/{envName}/utilization][%d] getEnvironmentResourcesUtilizationOK %s", 200, payload)
}

func (o *GetEnvironmentResourcesUtilizationOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /applications/{appName}/environments/{envName}/utilization][%d] getEnvironmentResourcesUtilizationOK %s", 200, payload)
}

func (o *GetEnvironmentResourcesUtilizationOK) GetPayload() *models.ReplicaResourcesUtilizationResponse {
	return o.Payload
}

func (o *GetEnvironmentResourcesUtilizationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ReplicaResourcesUtilizationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEnvironmentResourcesUtilizationNotFound creates a GetEnvironmentResourcesUtilizationNotFound with default headers values
func NewGetEnvironmentResourcesUtilizationNotFound() *GetEnvironmentResourcesUtilizationNotFound {
	return &GetEnvironmentResourcesUtilizationNotFound{}
}

/*
GetEnvironmentResourcesUtilizationNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetEnvironmentResourcesUtilizationNotFound struct {
}

// IsSuccess returns true when this get environment resources utilization not found response has a 2xx status code
func (o *GetEnvironmentResourcesUtilizationNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get environment resources utilization not found response has a 3xx status code
func (o *GetEnvironmentResourcesUtilizationNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get environment resources utilization not found response has a 4xx status code
func (o *GetEnvironmentResourcesUtilizationNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get environment resources utilization not found response has a 5xx status code
func (o *GetEnvironmentResourcesUtilizationNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get environment resources utilization not found response a status code equal to that given
func (o *GetEnvironmentResourcesUtilizationNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get environment resources utilization not found response
func (o *GetEnvironmentResourcesUtilizationNotFound) Code() int {
	return 404
}

func (o *GetEnvironmentResourcesUtilizationNotFound) Error() string {
	return fmt.Sprintf("[GET /applications/{appName}/environments/{envName}/utilization][%d] getEnvironmentResourcesUtilizationNotFound", 404)
}

func (o *GetEnvironmentResourcesUtilizationNotFound) String() string {
	return fmt.Sprintf("[GET /applications/{appName}/environments/{envName}/utilization][%d] getEnvironmentResourcesUtilizationNotFound", 404)
}

func (o *GetEnvironmentResourcesUtilizationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
