// Code generated by go-swagger; DO NOT EDIT.

package job

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// JobLogReader is a Reader for the JobLog structure.
type JobLogReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *JobLogReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewJobLogOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewJobLogNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /applications/{appName}/environments/{envName}/jobcomponents/{jobComponentName}/scheduledjobs/{scheduledJobName}/logs] jobLog", response, response.Code())
	}
}

// NewJobLogOK creates a JobLogOK with default headers values
func NewJobLogOK() *JobLogOK {
	return &JobLogOK{}
}

/*
JobLogOK describes a response with status code 200, with default header values.

scheduled job log
*/
type JobLogOK struct {
	Payload string
}

// IsSuccess returns true when this job log o k response has a 2xx status code
func (o *JobLogOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this job log o k response has a 3xx status code
func (o *JobLogOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this job log o k response has a 4xx status code
func (o *JobLogOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this job log o k response has a 5xx status code
func (o *JobLogOK) IsServerError() bool {
	return false
}

// IsCode returns true when this job log o k response a status code equal to that given
func (o *JobLogOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the job log o k response
func (o *JobLogOK) Code() int {
	return 200
}

func (o *JobLogOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /applications/{appName}/environments/{envName}/jobcomponents/{jobComponentName}/scheduledjobs/{scheduledJobName}/logs][%d] jobLogOK %s", 200, payload)
}

func (o *JobLogOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /applications/{appName}/environments/{envName}/jobcomponents/{jobComponentName}/scheduledjobs/{scheduledJobName}/logs][%d] jobLogOK %s", 200, payload)
}

func (o *JobLogOK) GetPayload() string {
	return o.Payload
}

func (o *JobLogOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewJobLogNotFound creates a JobLogNotFound with default headers values
func NewJobLogNotFound() *JobLogNotFound {
	return &JobLogNotFound{}
}

/*
JobLogNotFound describes a response with status code 404, with default header values.

Not found
*/
type JobLogNotFound struct {
}

// IsSuccess returns true when this job log not found response has a 2xx status code
func (o *JobLogNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this job log not found response has a 3xx status code
func (o *JobLogNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this job log not found response has a 4xx status code
func (o *JobLogNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this job log not found response has a 5xx status code
func (o *JobLogNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this job log not found response a status code equal to that given
func (o *JobLogNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the job log not found response
func (o *JobLogNotFound) Code() int {
	return 404
}

func (o *JobLogNotFound) Error() string {
	return fmt.Sprintf("[GET /applications/{appName}/environments/{envName}/jobcomponents/{jobComponentName}/scheduledjobs/{scheduledJobName}/logs][%d] jobLogNotFound", 404)
}

func (o *JobLogNotFound) String() string {
	return fmt.Sprintf("[GET /applications/{appName}/environments/{envName}/jobcomponents/{jobComponentName}/scheduledjobs/{scheduledJobName}/logs][%d] jobLogNotFound", 404)
}

func (o *JobLogNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
