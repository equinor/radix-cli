// Code generated by go-swagger; DO NOT EDIT.

package pipeline_job

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/equinor/radix-cli/generated/radixapi/models"
)

// GetTektonPipelineRunTaskStepReader is a Reader for the GetTektonPipelineRunTaskStep structure.
type GetTektonPipelineRunTaskStepReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTektonPipelineRunTaskStepReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTektonPipelineRunTaskStepOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetTektonPipelineRunTaskStepUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetTektonPipelineRunTaskStepNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /applications/{appName}/jobs/{jobName}/pipelineruns/{pipelineRunName}/tasks/{taskName}/step/{stepName}] getTektonPipelineRunTaskStep", response, response.Code())
	}
}

// NewGetTektonPipelineRunTaskStepOK creates a GetTektonPipelineRunTaskStepOK with default headers values
func NewGetTektonPipelineRunTaskStepOK() *GetTektonPipelineRunTaskStepOK {
	return &GetTektonPipelineRunTaskStepOK{}
}

/*
GetTektonPipelineRunTaskStepOK describes a response with status code 200, with default header values.

List of Pipeline Run Task Steps
*/
type GetTektonPipelineRunTaskStepOK struct {
	Payload *models.Step
}

// IsSuccess returns true when this get tekton pipeline run task step o k response has a 2xx status code
func (o *GetTektonPipelineRunTaskStepOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get tekton pipeline run task step o k response has a 3xx status code
func (o *GetTektonPipelineRunTaskStepOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tekton pipeline run task step o k response has a 4xx status code
func (o *GetTektonPipelineRunTaskStepOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get tekton pipeline run task step o k response has a 5xx status code
func (o *GetTektonPipelineRunTaskStepOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get tekton pipeline run task step o k response a status code equal to that given
func (o *GetTektonPipelineRunTaskStepOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get tekton pipeline run task step o k response
func (o *GetTektonPipelineRunTaskStepOK) Code() int {
	return 200
}

func (o *GetTektonPipelineRunTaskStepOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /applications/{appName}/jobs/{jobName}/pipelineruns/{pipelineRunName}/tasks/{taskName}/step/{stepName}][%d] getTektonPipelineRunTaskStepOK %s", 200, payload)
}

func (o *GetTektonPipelineRunTaskStepOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /applications/{appName}/jobs/{jobName}/pipelineruns/{pipelineRunName}/tasks/{taskName}/step/{stepName}][%d] getTektonPipelineRunTaskStepOK %s", 200, payload)
}

func (o *GetTektonPipelineRunTaskStepOK) GetPayload() *models.Step {
	return o.Payload
}

func (o *GetTektonPipelineRunTaskStepOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Step)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTektonPipelineRunTaskStepUnauthorized creates a GetTektonPipelineRunTaskStepUnauthorized with default headers values
func NewGetTektonPipelineRunTaskStepUnauthorized() *GetTektonPipelineRunTaskStepUnauthorized {
	return &GetTektonPipelineRunTaskStepUnauthorized{}
}

/*
GetTektonPipelineRunTaskStepUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetTektonPipelineRunTaskStepUnauthorized struct {
}

// IsSuccess returns true when this get tekton pipeline run task step unauthorized response has a 2xx status code
func (o *GetTektonPipelineRunTaskStepUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get tekton pipeline run task step unauthorized response has a 3xx status code
func (o *GetTektonPipelineRunTaskStepUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tekton pipeline run task step unauthorized response has a 4xx status code
func (o *GetTektonPipelineRunTaskStepUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get tekton pipeline run task step unauthorized response has a 5xx status code
func (o *GetTektonPipelineRunTaskStepUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get tekton pipeline run task step unauthorized response a status code equal to that given
func (o *GetTektonPipelineRunTaskStepUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get tekton pipeline run task step unauthorized response
func (o *GetTektonPipelineRunTaskStepUnauthorized) Code() int {
	return 401
}

func (o *GetTektonPipelineRunTaskStepUnauthorized) Error() string {
	return fmt.Sprintf("[GET /applications/{appName}/jobs/{jobName}/pipelineruns/{pipelineRunName}/tasks/{taskName}/step/{stepName}][%d] getTektonPipelineRunTaskStepUnauthorized", 401)
}

func (o *GetTektonPipelineRunTaskStepUnauthorized) String() string {
	return fmt.Sprintf("[GET /applications/{appName}/jobs/{jobName}/pipelineruns/{pipelineRunName}/tasks/{taskName}/step/{stepName}][%d] getTektonPipelineRunTaskStepUnauthorized", 401)
}

func (o *GetTektonPipelineRunTaskStepUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTektonPipelineRunTaskStepNotFound creates a GetTektonPipelineRunTaskStepNotFound with default headers values
func NewGetTektonPipelineRunTaskStepNotFound() *GetTektonPipelineRunTaskStepNotFound {
	return &GetTektonPipelineRunTaskStepNotFound{}
}

/*
GetTektonPipelineRunTaskStepNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetTektonPipelineRunTaskStepNotFound struct {
}

// IsSuccess returns true when this get tekton pipeline run task step not found response has a 2xx status code
func (o *GetTektonPipelineRunTaskStepNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get tekton pipeline run task step not found response has a 3xx status code
func (o *GetTektonPipelineRunTaskStepNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tekton pipeline run task step not found response has a 4xx status code
func (o *GetTektonPipelineRunTaskStepNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get tekton pipeline run task step not found response has a 5xx status code
func (o *GetTektonPipelineRunTaskStepNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get tekton pipeline run task step not found response a status code equal to that given
func (o *GetTektonPipelineRunTaskStepNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get tekton pipeline run task step not found response
func (o *GetTektonPipelineRunTaskStepNotFound) Code() int {
	return 404
}

func (o *GetTektonPipelineRunTaskStepNotFound) Error() string {
	return fmt.Sprintf("[GET /applications/{appName}/jobs/{jobName}/pipelineruns/{pipelineRunName}/tasks/{taskName}/step/{stepName}][%d] getTektonPipelineRunTaskStepNotFound", 404)
}

func (o *GetTektonPipelineRunTaskStepNotFound) String() string {
	return fmt.Sprintf("[GET /applications/{appName}/jobs/{jobName}/pipelineruns/{pipelineRunName}/tasks/{taskName}/step/{stepName}][%d] getTektonPipelineRunTaskStepNotFound", 404)
}

func (o *GetTektonPipelineRunTaskStepNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
