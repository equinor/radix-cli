// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ClusterConfiguration ClusterConfiguration holds cluster configuration environment.
//
// swagger:model ClusterConfiguration
type ClusterConfiguration struct {

	// ClusterEgressIps List of egress IPs for the cluster. Can be used for whitelisting in external services.
	ClusterEgressIps []string `json:"clusterEgressIps"`

	// ClusterName The name of the cluster
	// Example: weekly-40
	ClusterName string `json:"clusterName,omitempty"`

	// ClusterOidcIssuers List of OIDC issuers for the cluster. Can be used for configuring OIDC clients and setting up Federated Credentials.
	ClusterOidcIssuers []string `json:"clusterOidcIssuers"`

	// DNSZone The DNS zone configured for the cluster environment
	// Example: qa.radix.equinor.com
	DNSZone string `json:"dnsZone,omitempty"`
}

// Validate validates this cluster configuration
func (m *ClusterConfiguration) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this cluster configuration based on context it is used
func (m *ClusterConfiguration) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ClusterConfiguration) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ClusterConfiguration) UnmarshalBinary(b []byte) error {
	var res ClusterConfiguration
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
