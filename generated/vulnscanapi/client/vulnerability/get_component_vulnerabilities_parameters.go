// Code generated by go-swagger; DO NOT EDIT.

package vulnerability

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetComponentVulnerabilitiesParams creates a new GetComponentVulnerabilitiesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetComponentVulnerabilitiesParams() *GetComponentVulnerabilitiesParams {
	return &GetComponentVulnerabilitiesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetComponentVulnerabilitiesParamsWithTimeout creates a new GetComponentVulnerabilitiesParams object
// with the ability to set a timeout on a request.
func NewGetComponentVulnerabilitiesParamsWithTimeout(timeout time.Duration) *GetComponentVulnerabilitiesParams {
	return &GetComponentVulnerabilitiesParams{
		timeout: timeout,
	}
}

// NewGetComponentVulnerabilitiesParamsWithContext creates a new GetComponentVulnerabilitiesParams object
// with the ability to set a context for a request.
func NewGetComponentVulnerabilitiesParamsWithContext(ctx context.Context) *GetComponentVulnerabilitiesParams {
	return &GetComponentVulnerabilitiesParams{
		Context: ctx,
	}
}

// NewGetComponentVulnerabilitiesParamsWithHTTPClient creates a new GetComponentVulnerabilitiesParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetComponentVulnerabilitiesParamsWithHTTPClient(client *http.Client) *GetComponentVulnerabilitiesParams {
	return &GetComponentVulnerabilitiesParams{
		HTTPClient: client,
	}
}

/*
GetComponentVulnerabilitiesParams contains all the parameters to send to the API endpoint

	for the get component vulnerabilities operation.

	Typically these are written to a http.Request.
*/
type GetComponentVulnerabilitiesParams struct {

	/* AppName.

	   Name of the application
	*/
	AppName string

	/* ComponentName.

	   Name of the component
	*/
	ComponentName string

	/* EnvName.

	   Name of the environment
	*/
	EnvName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get component vulnerabilities params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetComponentVulnerabilitiesParams) WithDefaults() *GetComponentVulnerabilitiesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get component vulnerabilities params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetComponentVulnerabilitiesParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get component vulnerabilities params
func (o *GetComponentVulnerabilitiesParams) WithTimeout(timeout time.Duration) *GetComponentVulnerabilitiesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get component vulnerabilities params
func (o *GetComponentVulnerabilitiesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get component vulnerabilities params
func (o *GetComponentVulnerabilitiesParams) WithContext(ctx context.Context) *GetComponentVulnerabilitiesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get component vulnerabilities params
func (o *GetComponentVulnerabilitiesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get component vulnerabilities params
func (o *GetComponentVulnerabilitiesParams) WithHTTPClient(client *http.Client) *GetComponentVulnerabilitiesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get component vulnerabilities params
func (o *GetComponentVulnerabilitiesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAppName adds the appName to the get component vulnerabilities params
func (o *GetComponentVulnerabilitiesParams) WithAppName(appName string) *GetComponentVulnerabilitiesParams {
	o.SetAppName(appName)
	return o
}

// SetAppName adds the appName to the get component vulnerabilities params
func (o *GetComponentVulnerabilitiesParams) SetAppName(appName string) {
	o.AppName = appName
}

// WithComponentName adds the componentName to the get component vulnerabilities params
func (o *GetComponentVulnerabilitiesParams) WithComponentName(componentName string) *GetComponentVulnerabilitiesParams {
	o.SetComponentName(componentName)
	return o
}

// SetComponentName adds the componentName to the get component vulnerabilities params
func (o *GetComponentVulnerabilitiesParams) SetComponentName(componentName string) {
	o.ComponentName = componentName
}

// WithEnvName adds the envName to the get component vulnerabilities params
func (o *GetComponentVulnerabilitiesParams) WithEnvName(envName string) *GetComponentVulnerabilitiesParams {
	o.SetEnvName(envName)
	return o
}

// SetEnvName adds the envName to the get component vulnerabilities params
func (o *GetComponentVulnerabilitiesParams) SetEnvName(envName string) {
	o.EnvName = envName
}

// WriteToRequest writes these params to a swagger request
func (o *GetComponentVulnerabilitiesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param appName
	if err := r.SetPathParam("appName", o.AppName); err != nil {
		return err
	}

	// path param componentName
	if err := r.SetPathParam("componentName", o.ComponentName); err != nil {
		return err
	}

	// path param envName
	if err := r.SetPathParam("envName", o.EnvName); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
